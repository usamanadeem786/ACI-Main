[
    {
        "name": "SLACK__CONVERSATIONS_LIST",
        "description": "Lists all channels in a Slack team",
        "tags": [
            "chat",
            "search"
        ],
        "visibility": "public",
        "active": true,
        "protocol": "rest",
        "protocol_data": {
            "method": "GET",
            "path": "/conversations.list",
            "server_url": "https://slack.com/api"
        },
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "object",
                    "description": "query parameters",
                    "properties": {
                        "cursor": {
                            "type": "string",
                            "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection."
                        },
                        "exclude_archived": {
                            "type": "boolean",
                            "description": "Exclude archived channels from the list",
                            "default": false
                        },
                        "limit": {
                            "type": "integer",
                            "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer under 1000.",
                            "default": 100
                        },
                        "team_id": {
                            "type": "string",
                            "description": "encoded team id to list channels in, required if token belongs to org-wide app"
                        },
                        "types": {
                            "type": "array",
                            "description": "Mix and match channel types by providing a comma-separated list of any combination of public_channel, private_channel, mpim, im",
                            "items": {
                                "type": "string",
                                "enum": ["public_channel", "private_channel", "mpim", "im"]
                            }
                        }
                    },
                    "required": [],
                    "visible": [
                        "cursor",
                        "exclude_archived",
                        "limit",
                        "types"
                    ],
                    "additionalProperties": false
                }
            },
            "required": [],
            "visible": [
                "query"
            ],
            "additionalProperties": false
        }
    },
    {
      "name": "SLACK__CONVERSATIONS_MEMBERS",
      "description": "Retrieve members of a conversation",
      "tags": ["slack", "channels", "conversations", "members"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/conversations.members",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the http request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the http request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The ID of the conversation to fetch members for"
              },
              "cursor": {
                "type": "string",
                "description": "Pagination cursor for next page"
              },
              "limit": {
                "type": "integer",
                "description": "The maximum number of items to return",
                "default": 100
              }
            },
            "required": ["channel"],
            "visible": ["channel", "cursor", "limit"],
            "additionalProperties": false
          }
        },
        "required": ["header", "query"],
        "visible": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_INFO",
      "description": "Retrieves information about a conversation (channel)",
      "tags": ["slack", "channels", "conversations"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/conversations.info",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the http request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/x-www-form-urlencoded"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the http request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Conversation ID of the channel to get information about"
              },
              "include_locale": {
                "type": "boolean",
                "description": "Set to true to receive the locale for this conversation",
                "default": true
              },
              "include_num_members": {
                "type": "boolean",
                "description": "Set to true to include the member count for the specified conversation",
                "default": false
              }
            },
            "required": ["channel"],
            "visible": ["channel", "include_locale", "include_num_members"],
            "additionalProperties": false
          }
        },
        "required": ["header", "query"],
        "visible": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__USERS_CONVERSATIONS",
      "description": "List conversations the calling user may access",
      "tags": ["conversations", "users"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/users.conversations",
        "server_url": "https://slack.com/api/"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/x-www-form-urlencoded"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the HTTP request",
            "properties": {
              "cursor": {
                "type": "string",
                "description": "Pagination cursor for navigating through data collections"
              },
              "exclude_archived": {
                "type": "boolean",
                "description": "Set to true to exclude archived channels from the list",
                "default": false
              },
              "limit": {
                "type": "integer",
                "description": "The maximum number of items to return (max value: 999)",
                "default": 100
              },
              "team_id": {
                "type": "string",
                "description": "Encoded team ID to list conversations in, required if org token is used"
              },
              "types": {
                "type": "string",
                "description": "Comma-separated list of channel types (public_channel, private_channel, mpim, im)",
                "default": "public_channel"
              },
              "user": {
                "type": "string",
                "description": "Browse conversations by a specific user ID's membership"
              }
            },
            "required": [],
            "visible": ["cursor", "exclude_archived", "limit",  "types", "user"],
            "additionalProperties": false
          }
        },
        "required": ["header"],
        "visible": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_HISTORY",
      "description": "Fetches a conversation's history of messages and events",
      "tags": ["slack", "channels", "conversations", "messages"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/conversations.history",
        "server_url": "https://slack.com/api/"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the http request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "The MIME type of the body of the request",
                "default": "application/x-www-form-urlencoded"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the http request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Conversation ID to fetch history for"
              },
              "cursor": {
                "type": "string",
                "description": "Pagination cursor for next page"
              },
              "include_all_metadata": {
                "type": "boolean",
                "description": "Include all metadata in the response",
                "default": false
              },
              "inclusive": {
                "type": "boolean",
                "description": "Include messages with latest or oldest timestamp in results",
                "default": false
              },
              "latest": {
                "type": "string",
                "description": "End of time range of messages to include in results",
                "default": "now"
              },
              "limit": {
                "type": "integer",
                "description": "The maximum number of items to return",
                "default": 100
              },
              "oldest": {
                "type": "string",
                "description": "Start of time range of messages to include in results",
                "default": "0"
              }
            },
            "required": ["channel"],
            "visible": ["channel", "cursor", "inclusive", "latest", "limit", "oldest", "include_all_metadata"],
            "additionalProperties": false
          }
        },
        "required": ["header", "query"],
        "visible": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_REPLIES",
      "description": "Retrieve a thread of messages posted to a conversation",
      "tags": ["conversations", "messages", "threads"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/conversations.replies",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/x-www-form-urlencoded"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the request",
            "properties": {
              "token": {
                "type": "string",
                "description": "Authentication token bearing required scopes",
                "default": null
              },
              "channel": {
                "type": "string",
                "description": "Conversation ID to fetch thread from"
              },
              "ts": {
                "type": "string",
                "description": "Unique identifier of either a thread's parent message or a message in the thread"
              },
              "cursor": {
                "type": "string",
                "description": "Pagination cursor for navigating through collections of data"
              },
              "include_all_metadata": {
                "type": "boolean",
                "description": "Return all metadata associated with this message",
                "default": false
              },
              "inclusive": {
                "type": "boolean",
                "description": "Include messages with oldest or latest timestamps in results",
                "default": false
              },
              "latest": {
                "type": "string",
                "description": "Only messages before this Unix timestamp will be included in results",
                "default": "now"
              },
              "limit": {
                "type": "integer",
                "description": "The maximum number of items to return",
                "default": 100
              },
              "oldest": {
                "type": "string",
                "description": "Only messages after this Unix timestamp will be included in results",
                "default": "0"
              }
            },
            "required": ["token", "channel", "ts"],
            "visible": ["channel", "ts", "cursor", "include_all_metadata", "inclusive", "latest", "limit", "oldest"],
            "additionalProperties": false
          }
        },
        "required": ["header", "query"],
        "visible": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_CREATE",
      "description": "Initiates a public or private channel-based conversation",
      "tags": ["conversations", "channels"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.create",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the public or private channel to create"
              },
              "is_private": {
                "type": "boolean",
                "description": "Create a private channel instead of a public one"
              },
              "team_id": {
                "type": "string",
                "description": "Encoded team id to create the channel in, required if org token is used"
              }
            },
            "required": ["name"],
            "visible": ["name", "is_private"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_RENAME",
      "description": "Renames a conversation",
      "tags": ["conversations", "channels"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.rename",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "ID of conversation to rename"
              },
              "name": {
                "type": "string",
                "description": "New name for conversation"
              }
            },
            "required": ["channel", "name"],
            "visible": ["channel", "name"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_SET_PURPOSE",
      "description": "Sets the channel description",
      "tags": ["conversations", "channels"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.setPurpose",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the http request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Channel to set the description of"
              },
              "purpose": {
                "type": "string",
                "description": "The description to set for the channel"
              }
            },
            "required": ["channel", "purpose"],
            "visible": ["channel", "purpose"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_SET_TOPIC",
      "description": "Sets the topic for a conversation",
      "tags": ["conversations", "topic"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.setTopic",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties":{
              "channel": {
                "type": "string",
                "description": "Conversation ID to set the topic of"
              },
              "topic": {
                "type": "string",
                "description": "The new topic string. Does not support formatting or linkification."
              }
            },
            "required": ["channel", "topic"],
            "visible": ["channel", "topic"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_ARCHIVE",
      "description": "Archives a conversation",
      "tags": ["conversations", "archive"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.archive",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "ID of conversation to archive"
              }
            },
            "required": ["channel"],
            "visible": ["channel"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_UNARCHIVE",
      "description": "Reverses conversation archival",
      "tags": ["conversations", "archive"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.unarchive",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "ID of conversation to unarchive"
              }
            },
            "required": ["channel"],
            "visible": ["channel"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_OPEN",
      "description": "Opens or resumes a direct message or multi-person direct message",
      "tags": ["conversations", "direct message"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.open",
        "server_url": "https://slack.com/api",
        "content_type": "application/x-www-form-urlencoded"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Resume a conversation by supplying an 'im' or 'mpim's ID"
              },
              "return_im": {
                "type": "boolean",
                "description": "Indicates you want the full IM channel definition in the response"
              },
              "users": {
                "type": "string",
                "description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM"
              },
              "prevent_creation": {
                "type": "boolean",
                "description": "Do not create a direct message or multi-person direct message. This is used to see if there is an existing dm or mpdm",
                "default": true
              }
            },
            "required": ["prevent_creation"],
            "visible": ["channel", "return_im", "users"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CONVERSATIONS_CLOSE",
      "description": "Closes a direct message or multi-person direct message",
      "tags": ["conversations", "messaging"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/conversations.close",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Conversation ID to close"
              }
            },
            "required": ["channel"],
            "visible": ["channel"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_POST_MESSAGE",
      "description": "Sends a message to a Slack channel, private group, or direct message",
      "tags": ["messaging", "chat", "slack"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.postMessage",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Message content and configuration",
            "properties": {
              "channel": {
                "type": "string",
                "description": "An encoded ID or channel name that represents a channel, private group, or IM channel to send the message to"
              },
              "text": {
                "type": "string",
                "description": "The text of the message. When using blocks or attachments, this is used as fallback text for notifications"
              },
              "blocks": {
                "type": "array",
                "description": "A JSON-based array of structured blocks",
                "items": {
                  "type": "object"
                }
              },
              "attachments": {
                "type": "string",
                "description": "A JSON-based array of structured attachments"
              },
              "markdown_text": {
                "type": "string",
                "description": "Message text formatted in markdown. Should not be used with blocks or text. Limit to 12,000 characters"
              },
              "thread_ts": {
                "type": "string",
                "description": "Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead"
              },
              "reply_broadcast": {
                "type": "boolean",
                "description": "Used with thread_ts to make reply visible to everyone in the channel. Defaults to false",
                "default": false
              },
              "mrkdwn": {
                "type": "boolean",
                "description": "Disable Slack markup parsing by setting to false. Enabled by default",
                "default": true
              },
              "parse": {
                "type": "string",
                "description": "Change how messages are treated. Set to 'none' to remove hyperlinks, 'full' to ignore mrkdwn formatting",
                "enum": ["none", "full"]
              },
              "unfurl_links": {
                "type": "boolean",
                "description": "Pass true to enable unfurling of primarily text-based content"
              },
              "unfurl_media": {
                "type": "boolean",
                "description": "Pass false to disable unfurling of media content"
              },
              "username": {
                "type": "string",
                "description": "Set your bot's user name"
              },
              "icon_emoji": {
                "type": "string",
                "description": "Emoji to use as the icon for this message. Overrides icon_url"
              },
              "icon_url": {
                "type": "string",
                "description": "URL to an image to use as the icon for this message"
              },
              "link_names": {
                "type": "boolean",
                "description": "Find and link user groups"
              }
            },
            "required": ["channel"],
            "visible": ["channel", "text", "blocks", "markdown_text", "thread_ts", "reply_broadcast", "mrkdwn", "parse", "unfurl_links", "unfurl_media", "icon_emoji", "icon_url", "link_names"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_POST_EPHEMERAL",
      "description": "Sends an ephemeral message to a user in a channel",
      "tags": ["chat", "message", "ephemeral"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.postEphemeral",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name"
              },
              "user": {
                "type": "string",
                "description": "ID of the user who will receive the ephemeral message. The user should be in the channel specified by the channel argument"
              },
              "text": {
                "type": "string",
                "description": "Text of the message to send. When attachments or blocks are included, text will be used as fallback text for notifications only"
              },
              "attachments": {
                "type": "string",
                "description": "A JSON-based array of structured attachments, presented as a URL-encoded string"
              },
              "blocks": {
                "type": "string",
                "description": "A JSON-based array of structured blocks, presented as a URL-encoded string"
              },
              "as_user": {
                "type": "boolean",
                "description": "(Legacy) Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false",
                "default": true
              },
              "icon_emoji": {
                "type": "string",
                "description": "Emoji to use as the icon for this message. Overrides icon_url"
              },
              "icon_url": {
                "type": "string",
                "description": "URL to an image to use as the icon for this message"
              },
              "link_names": {
                "type": "boolean",
                "description": "Find and link channel names and usernames"
              },
              "markdown_text": {
                "type": "string",
                "description": "Accepts message text formatted in markdown. This argument should not be used in conjunction with blocks or text. Limit this field to 12,000 characters"
              },
              "parse": {
                "type": "string",
                "description": "Change how messages are treated. Defaults to none"
              },
              "thread_ts": {
                "type": "string",
                "description": "Provide another message's ts value to post this message in a thread. Avoid using a reply's ts value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread"
              },
              "username": {
                "type": "string",
                "description": "Set your bot's user name"
              }
            },
            "required": ["channel", "user", "as_user"],
            "visible": ["channel", "user", "text", "blocks", "icon_emoji", "icon_url", "link_names", "markdown_text", "parse", "thread_ts", "username"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_UPDATE",
      "description": "Updates a message in a Slack channel",
      "tags": ["chat", "message", "update"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.update",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Parameters for updating a message",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Channel containing the message to be updated. For direct messages, ensure that this value is a DM ID (starts with D) instead of a User ID"
              },
              "ts": {
                "type": "string",
                "description": "Timestamp of the message to be updated"
              },
              "text": {
                "type": "string",
                "description": "New text for the message. If not specified and blocks are specified, the message's previous text will be overwritten"
              },
              "blocks": {
                "type": "string",
                "description": "A JSON-based array of structured blocks, presented as a URL-encoded string"
              },
              "attachments": {
                "type": "string",
                "description": "A JSON-based array of structured attachments, presented as a URL-encoded string"
              },
              "as_user": {
                "type": "boolean",
                "description": "Pass true to update the message as the authed user. Bot users in this context are considered authed users",
                "default": true
              },
              "file_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of new file ids that will be sent with this message"
              },
              "link_names": {
                "type": "boolean",
                "description": "Find and link channel names and usernames. Defaults to none"
              },
              "markdown_text": {
                "type": "string",
                "description": "Accepts message text formatted in markdown. This argument should not be used in conjunction with blocks or text"
              },
              "metadata": {
                "type": "string",
                "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string"
              },
              "parse": {
                "type": "string",
                "description": "Change how messages are treated. Defaults to client, unlike chat.postMessage. Accepts either none or full",
                "enum": ["none", "full"]
              },
              "reply_broadcast": {
                "type": "boolean",
                "description": "Broadcast an existing thread reply to make it visible to everyone in the channel or conversation",
                "default": false
              }
            },
            "required": ["channel", "ts", "as_user"],
            "visible": ["channel", "ts", "text", "blocks", "file_ids", "link_names", "markdown_text", "metadata", "parse", "reply_broadcast"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_DELETE",
      "description": "Deletes a message from a conversation",
      "tags": ["chat", "message", "delete"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.delete",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Channel containing the message to be deleted"
              },
              "ts": {
                "type": "string",
                "description": "Timestamp of the message to be deleted"
              },
              "as_user": {
                "type": "boolean",
                "description": "Pass true to delete the message as the authed user with chat:write:user scope.",
                "default": true
              }
            },
            "required": ["channel", "ts", "as_user"],
            "visible": ["channel", "ts"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_SCHEDULE_MESSAGE",
      "description": "Schedules a message to be sent to a channel at a specified time in the future",
      "tags": ["chat", "message", "schedule"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.scheduleMessage",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Parameters for scheduling a message",
            "properties": {
              "channel": {
                "type": "string",
                "description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name."
              },
              "post_at": {
                "type": "integer",
                "description": "Unix timestamp representing the future time the message should post to Slack (up to 120 days in the future)."
              },
              "text": {
                "type": "string",
                "description": "The text content of the message. When attachments or blocks are included, text will be used as fallback text for notifications only."
              },
              "blocks": {
                "type": "string",
                "description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
              },
              "attachments": {
                "type": "string",
                "description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
              },
              "markdown_text": {
                "type": "string",
                "description": "Accepts message text formatted in markdown. This argument should not be used with blocks or text. Limit to 12,000 characters."
              },
              "as_user": {
                "type": "boolean",
                "description": "Set to true to post the message as the authed user, instead of as a bot. Defaults to false.",
                "default": true
              },
              "link_names": {
                "type": "boolean",
                "description": "Find and link user groups. No longer supports linking individual users."
              },
              "metadata": {
                "type": "string",
                "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string."
              },
              "parse": {
                "type": "string",
                "description": "Change how messages are treated.",
                "enum": ["none", "full"]
              },
              "reply_broadcast": {
                "type": "boolean",
                "description": "Used with thread_ts to make reply visible to everyone in the channel. Defaults to false."
              },
              "thread_ts": {
                "type": "string",
                "description": "Provide another message's ts value to make this message a reply."
              },
              "unfurl_links": {
                "type": "boolean",
                "description": "Pass true to enable unfurling of primarily text-based content."
              },
              "unfurl_media": {
                "type": "boolean",
                "description": "Pass false to disable unfurling of media content."
              }
            },
            "required": ["channel", "post_at", "as_user"],
            "visible": ["channel", "post_at", "text", "blocks", "markdown_text", "link_names", "metadata", "parse", "reply_broadcast", "thread_ts", "unfurl_links", "unfurl_media"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_SCHEDULED_MESSAGES_LIST",
      "description": "Returns a list of scheduled messages",
      "tags": ["chat", "scheduled messages"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.scheduledMessages.list",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel of the scheduled messages"
              },
              "cursor": {
                "type": "string",
                "description": "For pagination purposes, this is the cursor value returned from a previous call indicating where you want to start this call from"
              },
              "latest": {
                "type": "string",
                "description": "A Unix timestamp of the latest value in the time range"
              },
              "limit": {
                "type": "integer",
                "description": "Maximum number of original entries to return",
                "default": 100
              },
              "oldest": {
                "type": "string",
                "description": "A Unix timestamp of the oldest value in the time range"
              },
              "team_id": {
                "type": "string",
                "description": "Encoded team id to list channels in, required if org token is used"
              }
            },
            "required": [],
            "visible": ["channel", "cursor", "latest", "limit", "oldest"],
            "additionalProperties": false
          }
        },
        "required": ["header"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
      "name": "SLACK__CHAT_DELETE_SCHEDULED_MESSAGE",
      "description": "Deletes a pending scheduled message from the queue.",
      "tags": ["chat", "message", "scheduled"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "POST",
        "path": "/chat.deleteScheduledMessage",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type of the request",
                "default": "application/json; charset=utf-8"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "body": {
            "type": "object",
            "description": "Body parameters for the request",
            "properties": {
              "channel": {
                "type": "string",
                "description": "The channel the scheduled_message is posting to"
              },
              "scheduled_message_id": {
                "type": "string",
                "description": "scheduled_message_id returned from call to chat.scheduleMessage"
              },
              "as_user": {
                "type": "boolean",
                "description": "Pass true to delete the message as the authed user with chat:write:user scope.",
                "default": true
              }
            },
            "required": ["channel", "scheduled_message_id", "as_user"],
            "visible": ["channel", "scheduled_message_id"],
            "additionalProperties": false
          }
        },
        "required": ["header", "body"],
        "visible": ["body"],
        "additionalProperties": false
      }
    },
    {
        "name": "SLACK__USERS_LIST",
        "description": "Lists all users in a Slack team",
        "tags": [
            "users",
            "team"
        ],
        "visibility": "public",
        "active": true,
        "protocol": "rest",
        "protocol_data": {
            "method": "GET",
            "path": "/users.list",
            "server_url": "https://slack.com/api"
        },
        "parameters": {
            "type": "object",
            "properties": {
                "header": {
                    "type": "object",
                    "description": "Headers for the HTTP request",
                    "properties": {
                        "Content-Type": {
                            "type": "string",
                            "description": "Content type for the request",
                            "default": "application/x-www-form-urlencoded"
                        }
                    },
                    "required": [
                        "Content-Type"
                    ],
                    "visible": [],
                    "additionalProperties": false
                },
                "query": {
                    "type": "object",
                    "description": "Query parameters for the request",
                    "properties": {
                        "cursor": {
                            "type": "string",
                            "description": "Pagination cursor for navigating through collections of data"
                        },
                        "include_locale": {
                            "type": "boolean",
                            "description": "Set to true to receive the locale for users",
                            "default": false
                        },
                        "limit": {
                            "type": "integer",
                            "description": "The maximum number of items to return (recommended: no more than 200)",
                            "default": 0
                        },
                        "team_id": {
                            "type": "string",
                            "description": "Encoded team ID to list users in, required if org token is used"
                        }
                    },
                    "required": [],
                    "visible": [
                        "cursor",
                        "include_locale",
                        "limit"
                    ],
                    "additionalProperties": false
                }
            },
            "required": [
                "header",
                "query"
            ],
            "visible": [
                "query"
            ],
            "additionalProperties": false
        }
    },
    {
        "name": "SLACK__USERS_INFO",
        "description": "Gets information about a user",
        "tags": [
            "users",
            "team"
        ],
        "visibility": "public",
        "active": true,
        "protocol": "rest",
        "protocol_data": {
            "method": "GET",
            "path": "/users.info",
            "server_url": "https://slack.com/api"
        },
        "parameters": {
            "type": "object",
            "properties": {
                "header": {
                    "type": "object",
                    "description": "Headers for the HTTP request",
                    "properties": {
                        "Content-Type": {
                            "type": "string",
                            "description": "Content type for the request",
                            "default": "application/x-www-form-urlencoded"
                        }
                    },
                    "required": [
                        "Content-Type"
                    ],
                    "visible": [],
                    "additionalProperties": false
                },
                "query": {
                    "type": "object",
                    "description": "Query parameters for the request",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "User ID to get information on"
                        }
                    },
                    "required": [
                        "user"
                    ],
                    "visible": [
                        "user"
                    ],
                    "additionalProperties": false
                }
            },
            "required": [
                "header",
                "query"
            ],
            "visible": [
                "query"
            ],
            "additionalProperties": false
        }
    },
    {
        "name": "SLACK__USERS_GET_PRESENCE",
        "description": "Gets user presence information",
        "tags": ["users", "presence"],
        "visibility": "public",
        "active": true,
        "protocol": "rest",
        "protocol_data": {
          "method": "GET",
          "path": "/users.getPresence",
          "server_url": "https://slack.com/api"
        },
        "parameters": {
          "type": "object",
          "properties": {
            "header": {
              "type": "object",
              "description": "Headers for the HTTP request",
              "properties": {
                "Content-Type": {
                  "type": "string",
                  "description": "Content type for the request",
                  "default": "application/x-www-form-urlencoded"
                }
              },
              "required": ["Content-Type"],
              "visible": [],
              "additionalProperties": false
            },
            "query": {
              "type": "object",
              "description": "Query parameters for the HTTP request",
              "properties": {
                "user": {
                  "type": "string",
                  "description": "User to get presence info on. Defaults to the authed user."
                }
              },
              "required": [],
              "visible": ["user"],
              "additionalProperties": false
            }
          },
          "required": ["header"],
          "visible": ["query"],
          "additionalProperties": false
        }
    },
    {
        "name": "SLACK__USERS_SET_PRESENCE",
        "description": "Sets user presence information",
        "tags": ["users", "presence"],
        "visibility": "public",
        "active": true,
        "protocol": "rest",
        "protocol_data": {
            "method": "POST",
            "path": "/users.setPresence",
            "server_url": "https://slack.com/api"
        },
        "parameters": {
            "type": "object",
            "properties": {
                "header": {
                    "type": "object",
                    "description": "Headers for the HTTP request",
                    "properties": {
                        "Content-Type": {
                            "type": "string",
                            "description": "Content type for the request",
                            "default": "application/json; charset=utf-8"
                        }
                    },
                    "required": ["Content-Type"],
                    "visible": [],
                    "additionalProperties": false
                },
                "body": {
                    "type": "object",
                    "description": "Body parameters for the HTTP request",
                    "properties": {
                        "presence": {
                            "type": "string",
                            "description": "Either 'auto' or 'away'",
                            "enum": ["auto", "away"]
                        }
                    },
                    "required": ["presence"],
                    "visible": ["presence"],
                    "additionalProperties": false
                }
            },
            "required": ["header", "body"],
            "visible": ["body"],
            "additionalProperties": false
        }
    },
    {
      "name": "SLACK__EMOJI_LIST",
      "description": "Lists custom emoji for a team",
      "tags": ["emoji"],
      "visibility": "public",
      "active": true,
      "protocol": "rest",
      "protocol_data": {
        "method": "GET",
        "path": "/emoji.list",
        "server_url": "https://slack.com/api"
      },
      "parameters": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "Headers for the HTTP request",
            "properties": {
              "Content-Type": {
                "type": "string",
                "description": "Content type for the request",
                "default": "application/x-www-form-urlencoded"
              }
            },
            "required": ["Content-Type"],
            "visible": [],
            "additionalProperties": false
          },
          "query": {
            "type": "object",
            "description": "Query parameters for the HTTP request",
            "properties": {
              "include_categories": {
                "type": "boolean",
                "description": "Include a list of categories for Unicode emoji and the emoji in each category",
                "default": false
              }
            },
            "required": [],
            "visible": ["include_categories"],
            "additionalProperties": false
          }
        },
        "required": ["header"],
        "visible": ["query"],
        "additionalProperties": false
    }
  },
  {
    "name": "SLACK__BOOKMARKS_LIST",
    "description": "List bookmarks for a channel in Slack",
    "tags": ["slack", "bookmarks"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/bookmarks.list",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "channel_id": {
              "type": "string",
              "description": "Channel to list bookmarks in"
            }
          },
          "required": ["channel_id"],
          "visible": ["channel_id"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__BOOKMARKS_ADD",
    "description": "Add bookmark to a channel",
    "tags": ["bookmarks", "channel"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/bookmarks.add",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "channel_id": {
              "type": "string",
              "description": "Channel to add bookmark in"
            },
            "title": {
              "type": "string",
              "description": "Title for the bookmark"
            },
            "type": {
              "type": "string",
              "description": "Type of the bookmark (currently only 'link' is supported)",
              "default": "link"
            },
            "access_level": {
              "type": "string",
              "description": "The level that we are setting the file's permission to",
              "enum": ["read", "write"]
            },
            "emoji": {
              "type": "string",
              "description": "Emoji tag to apply to the link"
            },
            "entity_id": {
              "type": "string",
              "description": "ID of the entity being bookmarked. Only applies to message and file types"
            },
            "link": {
              "type": "string",
              "description": "Link to bookmark"
            },
            "parent_id": {
              "type": "string",
              "description": "ID of this bookmark's parent"
            }
          },
          "required": ["channel_id", "title", "type"],
          "visible": ["channel_id", "title", "type", "access_level", "emoji", "entity_id", "link", "parent_id"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__BOOKMARKS_EDIT",
    "description": "Edit bookmark in a Slack channel",
    "tags": ["bookmarks", "slack"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/api/bookmarks.edit",
      "server_url": "https://slack.com"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Request body parameters",
          "properties": {
            "bookmark_id": {
              "type": "string",
              "description": "Bookmark to update"
            },
            "channel_id": {
              "type": "string",
              "description": "Channel to update bookmark in"
            },
            "emoji": {
              "type": "string",
              "description": "Emoji tag to apply to the link"
            },
            "link": {
              "type": "string",
              "description": "Link to bookmark"
            },
            "title": {
              "type": "string",
              "description": "Title for the bookmark"
            }
          },
          "required": ["bookmark_id", "channel_id"],
          "visible": ["bookmark_id", "channel_id", "emoji", "link", "title"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__BOOKMARKS_REMOVE",
    "description": "Remove bookmark from the channel",
    "tags": ["bookmarks", "channels"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/bookmarks.remove",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "bookmark_id": {
              "type": "string",
              "description": "Bookmark to remove"
            },
            "channel_id": {
              "type": "string",
              "description": "Channel to remove bookmark from"
            },
            "quip_section_id": {
              "type": "string",
              "description": "Quip section ID to unbookmark"
            }
          },
          "required": ["bookmark_id", "channel_id"],
          "visible": ["bookmark_id", "channel_id", "quip_section_id"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__PINS_LIST",
    "description": "Lists items pinned to a channel",
    "tags": ["pins", "channel"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/pins.list",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/x-www-form-urlencoded"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the request",
          "properties": {
            "token": {
              "type": "string",
              "description": "Authentication token bearing required scopes",
              "default": null
            },
            "channel": {
              "type": "string",
              "description": "Channel ID to get pinned items for (e.g., C1234567890)"
            }
          },
          "required": ["token", "channel"],
          "visible": ["channel"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__PINS_ADD",
    "description": "Pins an item to a channel",
    "tags": ["pins", "channel"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/pins.add",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Channel ID to pin the message to"
            },
            "timestamp": {
              "type": "string",
              "description": "Timestamp of the message to pin"
            }
          },
          "required": ["channel"],
          "visible": ["channel", "timestamp"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__PINS_REMOVE",
    "description": "Un-pins an item from a channel",
    "tags": ["pins", "channel"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/pins.remove",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Channel where the item is pinned to"
            },
            "timestamp": {
              "type": "string",
              "description": "Timestamp of the message to un-pin"
            }
          },
          "required": ["channel"],
          "visible": ["channel", "timestamp"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REACTIONS_LIST",
    "description": "Lists reactions made by a user",
    "tags": ["reactions"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/reactions.list",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the request",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Number of items to return per page",
              "default": 100
            },
            "cursor": {
              "type": "string",
              "description": "Parameter for pagination. Set cursor equal to the next_cursor attribute returned by the previous request's response_metadata"
            },
            "full": {
              "type": "boolean",
              "description": "If true always return the complete reaction list"
            },
            "limit": {
              "type": "integer",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached",
              "default": 0
            },
            "page": {
              "type": "integer",
              "description": "Page number of results to return",
              "default": 1
            },
            "team_id": {
              "type": "string",
              "description": "Encoded team id to list reactions in, required if org token is used"
            },
            "user": {
              "type": "string",
              "description": "Show reactions made by this user. Defaults to the authed user"
            }
          },
          "required": [],
          "visible": ["count", "cursor", "full", "limit", "page", "user"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REACTIONS_GET",
    "description": "Gets reactions for an item (file, file comment, channel message, group message, or direct message)",
    "tags": ["reactions", "slack"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/reactions.get",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the HTTP request",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Channel where the message to get reactions for was posted"
            },
            "file": {
              "type": "string",
              "description": "File to get reactions for"
            },
            "file_comment": {
              "type": "string",
              "description": "File comment to get reactions for"
            },
            "full": {
              "type": "boolean",
              "description": "If true always return the complete reaction list"
            },
            "timestamp": {
              "type": "string",
              "description": "Timestamp of the message to get reactions for"
            }
          },
          "required": [],
          "visible": ["channel", "file", "file_comment", "full", "timestamp"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REACTIONS_ADD",
    "description": "Adds a reaction (emoji) to a message in a Slack channel",
    "tags": ["reactions", "emoji"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/reactions.add",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Parameters for adding a reaction",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Channel where the message to add reaction to was posted"
            },
            "name": {
              "type": "string",
              "description": "Reaction (emoji) name, can include skin tone modifiers like 'thumbsup::skin-tone-3'"
            },
            "timestamp": {
              "type": "string",
              "description": "Timestamp of the message to add reaction to"
            }
          },
          "required": ["channel", "name", "timestamp"],
          "visible": ["channel", "name", "timestamp"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REACTIONS_REMOVE",
    "description": "Removes a reaction (emoji) from an item (file, file comment, channel message, group message, or direct message)",
    "tags": ["reactions", "emoji"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/reactions.remove",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Body parameters for the request",
          "properties": {
            "name": {
              "type": "string",
              "description": "Reaction (emoji) name"
            },
            "channel": {
              "type": "string",
              "description": "Channel where the message to remove reaction from was posted"
            },
            "file": {
              "type": "string",
              "description": "File to remove reaction from"
            },
            "file_comment": {
              "type": "string",
              "description": "File comment to remove reaction from"
            },
            "timestamp": {
              "type": "string",
              "description": "Timestamp of the message to remove reaction from"
            }
          },
          "required": ["name"],
          "visible": ["name", "channel", "file", "file_comment", "timestamp"],
          "additionalProperties": false
        }
      },
      "required": ["header", "body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REMINDERS_LIST",
    "description": "Lists all reminders created by or for a given user",
    "tags": ["reminders"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/reminders.list",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/json; charset=utf-8"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the HTTP request",
          "properties": {
            "team_id": {
              "type": "string",
              "description": "Encoded team id, required if org token is passed"
            }
          },
          "required": [],
          "visible": [],
          "additionalProperties": false
        }
      },
      "required": ["header"],
      "visible": [],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__REMINDERS_INFO",
    "description": "Gets information about a reminder",
    "tags": ["reminders"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/reminders.info",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/x-www-form-urlencoded"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the HTTP request",
          "properties": {
            "reminder": {
              "type": "string",
              "description": "The ID of the reminder"
            },
            "team_id": {
              "type": "string",
              "description": "Encoded team id, required if org token is passed"
            }
          },
          "required": ["reminder"],
          "visible": ["reminder"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__SEARCH_ALL",
    "description": "Searches for messages and files matching a query",
    "tags": ["search", "messages", "files"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/search.all",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/x-www-form-urlencoded"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the HTTP request",
          "properties": {
            "query": {
              "type": "string",
              "description": "Search query. May contains booleans, etc."
            },
            "count": {
              "type": "integer",
              "description": "Number of items to return per page",
              "default": 20
            },
            "highlight": {
              "type": "boolean",
              "description": "Pass a value of true to enable query highlight markers",
              "default": false
            },
            "page": {
              "type": "integer",
              "description": "Page number of results to return",
              "default": 1
            },
            "sort": {
              "type": "string",
              "description": "Return matches sorted by either score or timestamp",
              "enum": ["score", "timestamp"],
              "default": "score"
            },
            "sort_dir": {
              "type": "string",
              "description": "Change sort direction to ascending (asc) or descending (desc)",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "team_id": {
              "type": "string",
              "description": "Encoded team id to search in, required if org token is used"
            }
          },
          "required": ["query"],
          "visible": ["query", "count", "highlight", "page", "sort", "sort_dir"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__SEARCH_FILES",
    "description": "Searches for files matching a query in Slack",
    "tags": ["search", "files"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/search.files",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the http request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type for the request",
              "default": "application/x-www-form-urlencoded"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the http request",
          "properties": {
            "query": {
              "type": "string",
              "description": "Search query to find matching files"
            },
            "count": {
              "type": "integer",
              "description": "Number of items to return per page",
              "default": 20
            },
            "highlight": {
              "type": "boolean",
              "description": "Pass a value of true to enable query highlight markers"
            },
            "page": {
              "type": "integer",
              "description": "Page number of results to return",
              "default": 1
            },
            "sort": {
              "type": "string",
              "description": "Return matches sorted by either score or timestamp",
              "enum": ["score", "timestamp"],
              "default": "score"
            },
            "sort_dir": {
              "type": "string",
              "description": "Change sort direction to ascending (asc) or descending (desc)",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "team_id": {
              "type": "string",
              "description": "Encoded team id to search in, required if org token is used"
            }
          },
          "required": ["query"],
          "visible": ["query", "count", "highlight", "page", "sort", "sort_dir"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "SLACK__SEARCH_MESSAGES",
    "description": "Searches for messages matching a query",
    "tags": ["search", "messages"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/search.messages",
      "server_url": "https://slack.com/api"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/x-www-form-urlencoded"
            }
          },
          "required": ["Content-Type"],
          "visible": [],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the request",
          "properties": {
            "query": {
              "type": "string",
              "description": "Search query"
            },
            "count": {
              "type": "integer",
              "description": "Number of items to return per page",
              "default": 20
            },
            "cursor": {
              "type": "string",
              "description": "Use this when getting results with cursormark pagination. For first call send `*` for subsequent calls, send the value of `next_cursor` returned in the previous call's results"
            },
            "highlight": {
              "type": "boolean",
              "description": "Pass a value of true to enable query highlight markers"
            },
            "page": {
              "type": "integer",
              "description": "Page number of results to return",
              "default": 1
            },
            "sort": {
              "type": "string",
              "description": "Return matches sorted by either score or timestamp",
              "enum": ["score", "timestamp"],
              "default": "score"
            },
            "sort_dir": {
              "type": "string",
              "description": "Change sort direction to ascending (asc) or descending (desc)",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "team_id": {
              "type": "string",
              "description": "Encoded team id to search in, required if org token is used"
            }
          },
          "required": ["query"],
          "visible": ["query", "count", "cursor", "highlight", "page", "sort", "sort_dir"],
          "additionalProperties": false
        }
      },
      "required": ["header", "query"],
      "visible": ["query"],
      "additionalProperties": false
    }
  }
]
